<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Configurações do NPC:

   Face -&gt; define a face do NPC
   PosX e PosY -&gt; define o local onde o NPC vai esta, pode usar a cordenada do jogo
   PacketID: Define qual pacote o npc vai enviar ao clicar em composição
   NPCName: Usado para facilitar a busca na mixlist, não utilizada dentro do jogo.
   Item: Define o item que será mostrado para ser composto, se usar o ID do item acima de  1000
             o npc irá buscar a descrição e icone do mesmo no arquivo MixHelp.dat
Exemplo:
Combinação_de_Item_Celestial 10007 298
FFFFFFFF Para_combinar_um_item_celestial,_é
FFFFFFFF necessário_um_item_selado_+9,_um_item_+15
FFFFFFFF de_arch_e_a_pedra_lunar_ou_a_jóia_da 
FFFFFFFF escuridão,_num_total_de_4_tipos_de
FFFFFFFF pedra_secreta.
FFFFFFFF                                 
FFFFFFFF                                          
FFFF0000    
FFFFFFFF       
Note que (10007 ) é o ID do Item e  (298) è o ID do Icone
--------------------------------------------------------------------------------------------------
   Composições de Itens Requeridos:

   Item(1~8) -&gt; Deve-se usar da seguinte forma ID TIPO (412 0)
        Note que se o Tipo for 0 deve se usar item comum
        Se o Tipo for 1 Não se usa ID de Item e sim o ID da Composição(Request Index)
        Se usar o tipo 2 será direcionando para composição de Soul
   Gold -&gt; Gold que será nescessário, custo da composição
--------------------------------------------------------------------------------------------------
   Composições:
   
  Item -&gt; Pode Usar itens normalmente (0 a 6500)
  Quantidade -&gt; Quantidade do item que será pedido, (item separado)
  StrDef -&gt; Texto que será exibido no lugar do nome do item, buscar no arquivo UI/strdef.bin
  Min | Max(0~2) -&gt; Intervalo de itens que será permitido colocar no slot da composição
Exemplo:
               Min: 419 Max 420, dessa forma o slot vai aceitar os restos de Ori e Lac no mesmo slot
  Unused   -&gt; Não é utilizado deixe sempre 0
  UnkNow -&gt; Não utilizado deixe sempre 0

Bugs CLientSide
   1º Cliente não envia os itens 7 e 8 no pacote
   2º Itens diferentes e com itens requeridos iguais mo mesmo npc, não é possivel indentificar
        qual item foi composto, servidor irá compor o primeiro item.
   3ª Há um limite Máximo de 100 itens para composições contando  com os que já tem.

         __________Tool criado por SeiTbNao - djunio_rmf@hotmail.com_________</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMhOEsySFgySFgySFgySFgvRVgtRFctRFct
        RFctRFctRFcnQFYnQFYnQFYnQFYnQFYnQFYAAAAnQFYfOlYeQmEAGjMAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMGCQsRGB2Hw/EhMDsAAABlncxsp9h4uO46W3cAAAAAAABQg7ForOsWKDkAAAAA
        AAAAAAAVJzlRldkfOlYAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjPw8PLg4OAAAADf7fj+
        //8AAAAGGy8AGjOTprf+///+//9UYWtorOvf7fj+///+///+///Q3OgQEBAwWYIfOlYAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMgN03+///+//8cJCn+///+//9GSEoFFicAGjMAGjP+///AwMAbLDpo
        rOuOwfD+//+AgIBwiaD+//9wcHAbMUgfOlY2UGUAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjNQYnP+
        ///Q0NCAhYv+///w8PJ6iZQzTWNcksBLfaj+///AwMAUIStorOuOwfD+//+AgIAvU3T+//+wsLAVJzkf
        OlZshZgAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjOAjZnw8PKQk5bg4OD+//+Qk5aQmKEMFR14uO6B
        vvD+///Q0NAMFR1lncyOwfD+//+AgIAvU3T+///AwMAVJzkfOlavyNYAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjPAxs3AwMCAhYv+///+//9AQkTAxs0AAAAuVnq01/X+///g4OBHYHYvTGeOwfD+//+AgIAv
        U3T+///AwMAVJzkfOlbX8PwgPlgAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjPw8PKQk5ZAS1b+///g4OAA
        Bg3+//8ABg0AFy3g4ODg4OCQmKGrvs8MFR2OwfD+//+AgIAvU3T+///AwMArT3QfOlbX8Px2oboAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMgN03+//9wcHAwNDf+///AwMAAAADQ0NAgIiNQV13+//+Qk5YwNDfg4OAA
        AABdcIL+//+AgIA6QEf+//+AgIBLi8sfOlbX8Pyu4Ph2obogPlgAGjMUMksAGjMAGjMAGjOgqrP+///Q
        0NCQmKH+///w8PJgbHjw8PKgqrPg4OD+///Q0NBgbHj+//+zwc+/1Of+///p7/X09/r09/psp9hWn+gg
        PljX8Pyu4Pir3vio2/el2fd5qMUAGjMAGjMAGjMySFhAU2ZAU2YySFhAU2ZAU2YhOEtAU2YySFhAU2ZA
        U2ZAU2YhOEtAU2YySFhQcpGMv/CJvu+BvvBorOtZoehWn+gfOlbX8Pyu4Pir3vio2/el2fei1/YAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMgR21coN9Z
        oehZoehZoehWn+gfOlbX8Pyu4Pir3vio2/el2feOwN4AGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMGIz4wYI5BeLBZoehRl90MJkHX8Pyu4Pir3vio
        2/el2fd5qMUAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjPX8Pyu4Pir3vio2/el2fdGbIkAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMnUXhSj8g3apoXPGAXPGAnVYIgTHYA
        GjPX8Pyu4Pir3vio2/eHttMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjNCdqZorOtorOtZoehZoehZoehZoegfOlbX8Pyu4Pir3vio2/c+Yn0AGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjNCdqZorOtlqeplqepZ
        oehZoehlqepWn+gfOlbX8Pyu4Pir3vio2/cKJj8AGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjMGIz5LgrJorOtorOtorOtlqepZoehZoehZoehWn+gfOlbX8Pyu4Pir3viJ
        t9MAGjMAGjMAGjMAGjMAGjMAGjMUMksAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMeQmFQg7Fxs+1orOtr
        r+xorOtlqeporOtlqepZoehZoehWn+gfOlbX8Pyu4Pir3vhpk64AGjMAGjMAGjMAGjMAGjNGbImQyvMt
        UW8AGjMAGjMAGjMAGjMAGjMAGjMAGjM8aZFxs+1xs+1xs+1orOtorOtlqeplqepZoehZoehZoehZoegf
        OlbX8Pyu4Pir3vg0VnAAGjMAGjMAGjMAGjMAGjNQcpGQyvM2XHsAGjMAGjMAGjMAGjMAGjMAGjMAGjM8
        aZF4uO5xs+1rr+xrr+xorOtlqeplqeplqepZoehZoehWn+gfOlbX8Pyu4PiWxuAAGjMKJj95qMUAGjMA
        GjMAGjNolriQyvMkRmMAGjMAGjMAGjMAGjMAGjMAGjMAGjNlncxxs+1xs+1xs+1orOtorOtorOtlqepZ
        oehZoehZoehZoegfOlbX8Pyu4PhhiaIAGjM0VnCi1/ZGbIk0VnAfOlZxosSQyvMkRmMAGjMAGjMAGjMA
        GjMAGjMAGjMmTG1xs+14uO5xs+1orOtrr+xorOtlqeplqeplqepZoehZoehWn+gfOlbX8PyZyOAUMksA
        GjN5qMWi1/af1faf1faPxeh6rNCQyvMkRmMAGjMAGjMAGjMAGjMAGjMAGjNlncx4uO5xs+1xs+1xs+1o
        rOtorOtorOtlqepZoehZoehZoehZoegfOlbX8PxXfZYAGjNJboil2fei1/af1faf1faQyvOf1faQyvMk
        RmMAGjMAGjMAGjMAGjMAGjMAGjNcksB4uO54uO5xs+1rr+xrr+xorOtlqeplqeplqepZoehZoehWn+gf
        OlbX8PwUMkuWxd+o2/el2fei1/af1faf1faf1faQyvOQyvMkRmMAGjMAGjMAGjMAGjMAGjMAGjMXOFZQ
        g7F4uO5xs+1orOtrr+xorOtorOtlqepZoehZoehZoehZoegfOlaiu8o6W3eo2/eo2/el2fei1/af1faf
        1faQyvOf1faQyvMkRmMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMGIz5LgrJxs+1orOtorOtlqeplqepl
        qepZoehZoehWn+gfOlYzTWOCrseo2/eo2/el2fei1/af1fai1/aQyvOf1faQyvMkRmMAGjMAGjMAGjMA
        GjMAGjMAGjMAGjMAGjMAGjM8aZForOtrr+xorOtorOtlqepZoehZoehZoehZoegfOlY2UGWu4Pir3vio
        2/el2fei1/af1faf1faf1faQyvNxosQAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjMAGjM8aZFrr+xo
        rOtorOtlqeplqeplqepZoehZoehWn+gfOlaUrr6u4Pir3vio2/el2fei1/af1faf1faQyvOf1fZQcpFo
        lrhlmcE2XHsAGjMAGjMQL0seQmEmTG0mTG0mTG1joNZrr+xrr+xorOtorOtlqepZoehZoehZoehZoegf
        OlbK4++u4Pir3vio2/el2fei1/af1fai1/aQyvOZ0PSQyvOQyvOQyvOOwfBlmcFrosyBvvB4uO54uO54
        uO5xs+1xs+1xs+1orOtorOtlqeplqeplqepZoehZoehWn+gfOlb+///U7vvU7vvU7vvU7vvQ6/vQ6/vJ
        5vnU7vvG5PnG5PnG5PnG5PnG5Pm93fe93fe93ffG5Pm93fe93fe93fe12Pa12Pa12Pa01/Wt0vSt0vSt
        0vSt0vSozfOozfNBeLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>